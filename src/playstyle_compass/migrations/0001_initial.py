# Generated by Django 5.1.2 on 2024-11-27 08:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Character",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("deck", models.TextField()),
                ("description", models.TextField()),
                ("birthday", models.TextField()),
                ("friends", models.TextField()),
                ("enemies", models.TextField()),
                ("games", models.TextField()),
                ("first_game", models.CharField(max_length=50)),
                ("franchises", models.TextField()),
                ("image", models.TextField()),
                ("images", models.TextField()),
                ("character_id", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "Characters",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Franchise",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("overview", models.TextField()),
                ("games", models.CharField(max_length=200)),
                ("image", models.TextField()),
                ("images", models.TextField()),
                ("games_count", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "Franchises",
                "ordering": ["title", "games_count"],
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("guid", models.CharField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("overview", models.TextField(blank=True, null=True)),
                ("genres", models.CharField(max_length=200)),
                ("platforms", models.CharField(max_length=200)),
                ("themes", models.CharField(max_length=200)),
                ("image", models.TextField()),
                ("release_date", models.CharField(max_length=100)),
                ("developers", models.CharField(max_length=100)),
                ("game_images", models.TextField()),
                ("similar_games", models.CharField(max_length=200)),
                ("dlcs", models.CharField(max_length=200)),
                ("franchises", models.CharField(max_length=200)),
                ("videos", models.TextField()),
                ("concepts", models.CharField(max_length=200)),
                ("is_casual", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("pc_req_min", models.TextField(default="")),
                ("pc_req_rec", models.TextField(default="")),
                ("mac_req_min", models.TextField(default="")),
                ("mac_req_rec", models.TextField(default="")),
                ("linux_req_min", models.TextField(default="")),
                ("linux_req_rec", models.TextField(default="")),
                ("average_score", models.FloatField(default=0)),
                ("total_reviews", models.IntegerField(default=0)),
                ("translated_description_ro", models.TextField(blank=True, null=True)),
                ("translated_overview_ro", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "Games",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="GameModes",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("game_id", models.CharField(max_length=100)),
                ("game_name", models.CharField(max_length=100)),
                ("game_mode", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "GameModes",
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("article_id", models.CharField(max_length=50, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("summary", models.TextField()),
                ("url", models.URLField()),
                ("image", models.URLField()),
                ("publish_date", models.CharField(max_length=50)),
                ("platforms", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "News",
            },
        ),
        migrations.CreateModel(
            name="GameList",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("game_guids", models.JSONField(default=list)),
                ("additional_games", models.CharField(blank=True, max_length=1000)),
                ("shared_by", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "favorites",
                    models.ManyToManyField(
                        blank=True,
                        related_name="favorite_game_lists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "liked_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="liked_game_lists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_lists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shared_with",
                    models.ManyToManyField(
                        blank=True,
                        related_name="shared_game_lists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListComment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Comment")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="playstyle_compass.gamelist",
                    ),
                ),
                (
                    "liked_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="liked_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "List Comment",
                "verbose_name_plural": "List Comments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reviewers", models.CharField(max_length=25)),
                ("review_deck", models.CharField(max_length=50)),
                ("review_description", models.TextField()),
                (
                    "score",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                ("likes", models.IntegerField(default=0)),
                ("dislikes", models.IntegerField(default=0)),
                ("liked_by", models.TextField(blank=True, default="")),
                ("disliked_by", models.TextField(blank=True, default="")),
                (
                    "date_added",
                    models.DateTimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="playstyle_compass.game",
                        to_field="guid",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Reviews",
            },
        ),
        migrations.CreateModel(
            name="SharedGame",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_deleted_by_sender", models.BooleanField(default=False)),
                ("is_deleted_by_receiver", models.BooleanField(default=False)),
                ("game_id", models.BigIntegerField()),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_games",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_games",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Message",
            },
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("gaming_history", models.TextField(blank=True)),
                ("favorite_genres", models.CharField(blank=True, max_length=255)),
                ("platforms", models.CharField(blank=True, max_length=255)),
                ("themes", models.CharField(blank=True, max_length=255)),
                ("quiz_recommendations", models.CharField(blank=True, max_length=255)),
                ("connection_types", models.CharField(blank=True, max_length=255)),
                ("game_styles", models.CharField(blank=True, max_length=255)),
                ("show_in_queue", models.BooleanField(default=True)),
                ("show_reviews", models.BooleanField(default=True)),
                ("show_favorites", models.BooleanField(default=True)),
                (
                    "favorite_games",
                    models.ManyToManyField(
                        blank=True,
                        related_name="favorite_by_users",
                        to="playstyle_compass.game",
                    ),
                ),
                (
                    "game_queue",
                    models.ManyToManyField(
                        blank=True,
                        related_name="queued_by_users",
                        to="playstyle_compass.game",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListReview",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        help_text="Rating between 1 (worst) and 5 (best)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_text", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="playstyle_compass.gamelist",
                    ),
                ),
                (
                    "liked_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="liked_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("game_list", "user")},
            },
        ),
    ]
